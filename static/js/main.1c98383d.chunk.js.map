{"version":3,"sources":["App.js","redux/actions.js","redux/reducer/todoReducer.js","redux/reducer/index.js","index.js"],"names":["App","dispatch","useDispatch","useSelector","state","toDos","items","className","onSubmit","e","preventDefault","val","target","Name","value","type","payload","name","placeholder","map","item","i","initialState","action","combineReducers","store","createStore","rootReducer","rootElement","document","getElementById","createRoot","render"],"mappings":"yKAKe,SAASA,IAEtB,IAAMC,EAAWC,cACgD,EAA1CC,aAAY,SAACC,GAAK,OAAU,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,QAAS,CAAC,CAAC,IAAxDC,aAAK,MAAG,GAAE,EASlB,OACE,sBAAKC,UAAU,MAAK,UAClB,uBAAMC,SAVS,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAMF,EAAEG,OAAOC,KAAKC,MAC1BH,GAAOV,ECZ2B,CACpCc,KAAM,UACNC,QDU2BL,IAEzBF,EAAEG,OAAOC,KAAKC,MAAQ,EACxB,EAI+B,UACzB,uBAAOG,KAAK,OAAOC,YAAY,YAC/B,wBAAQH,KAAK,SAAQ,uBAEtBT,EAAMa,KAAI,SAACC,EAAMC,GAAC,OACjB,4BAAYD,GAAJC,EAAa,MAI7B,C,mBE5BMC,EAAe,CACnBhB,MAAO,IAgBMD,EAbD,WAAmC,IAAlCD,EAAK,uDAAGkB,EAAcC,EAAM,uCACzC,MACO,YADCA,EAAOR,KAEJ,2BACFX,GAAK,IACRE,MAAM,GAAD,mBAAMF,EAAME,OAAK,CAAEiB,EAAOP,YAI1BZ,CAEb,ECZeoB,cAAgB,CAC7BnB,UCEIoB,EAAQC,YAAYC,GAEpBC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,IAAQ,CAACP,MAAOA,EAAM,SACrB,cAACzB,EAAG,M","file":"static/js/main.1c98383d.chunk.js","sourcesContent":["import { useReducer, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addItenm } from \"./redux/actions\";\nimport \"./styles.css\";\n\nexport default function App() {\n  // const [items, setItems] = useState([]);\n  const dispatch = useDispatch();\n  const { items = [] } = useSelector((state) => state?.toDos || {});\n  const createItem = (e) => {\n    e.preventDefault();\n    const val = e.target.Name.value;\n    val && dispatch(addItenm(val));\n    // setItems([...items, e.target.Name.value]);\n    e.target.Name.value = \"\";\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={createItem}>\n        <input name=\"Name\" placeholder=\"Type...\" />\n        <button type=\"submit\">Create</button>\n      </form>\n      {items.map((item, i) => (\n        <p key={i}>{item}</p>\n      ))}\n    </div>\n  );\n}\n","export const addItenm = (payload) => ({\r\n  type: \"ADD_NEW\",\r\n  payload\r\n});\r\n","const initialState = {\r\n  items: []\r\n};\r\n\r\nconst toDos = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_NEW\": {\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.payload]\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default toDos;\r\n","import toDos from \"./todoReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport default combineReducers({\r\n  toDos\r\n});\r\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport App from \"./App\";\nimport rootReducer from \"./redux/reducer\";\nconst store = createStore(rootReducer);\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}